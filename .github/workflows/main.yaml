name: Game Build
on:
  pull_request:
  release:
    types: [ "published" ]
  push:
    branches:
      - dev
      - test
  workflow_dispatch:

jobs:
  # Phase 1 - Unity Build (docs: https://game.ci/docs/2/github/builder)
  build:
    name: Build game
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.3.4f1
        targetPlatform:
          - StandaloneLinux64 # Target build for Linux standalone
          - WebGL # Target build for WebGL
        include:
          - targetPlatform: StandaloneLinux64
            dockerImage: cubespace-server
          - targetPlatform: WebGL
            dockerImage: cubespace-client
    steps:
      # Checkout
      - name: Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: false
      # Generate Library
      # This and the Build step below are identical. It is unclear why, but without both the builds/deploys get messed up. Having both does not significantly impact build times
      - name: Generate Library folder
        uses: game-ci/unity-builder@v2.1.1
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          buildMethod: UnityBuilderAction.BuildScript.BuildGame
          # If we have custom parameters, add them here with: customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          # Uncomment the devBuild flag here AND BELOW to do a dev build, which will perform SIGNIFICANTLY worse, but will print much better errors with stack traces
          #customParameters: -devBuild
      # Build
      - name: Build ${{ matrix.targetPlatform }}
        uses: game-ci/unity-builder@v2.1.1
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          buildMethod: UnityBuilderAction.BuildScript.BuildGame
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          # Uncomment the devBuild flag here AND ABOVE to do a dev build
          #customParameters: -devBuild
      # Upload
      - name: Upload game artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.targetPlatform }} Build
          path: build/${{ matrix.targetPlatform }}

      # Phase 2 - Docker Containerization
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cmusei/${{ matrix.dockerImage }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./build/${{ matrix.targetPlatform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.${{ matrix.targetPlatform }}

      - name: Cleanup Docker System
        run: docker system prune -a -f
